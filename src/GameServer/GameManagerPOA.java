package GameServer;


/**
* GameServer/GameManagerPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from GameManagerIDL.idl
* Quarta-feira, 28 de Junho de 2017 00h39min39s BRT
*/

public abstract class GameManagerPOA extends org.omg.PortableServer.Servant
 implements GameServer.GameManagerOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("enterOnMatch", new java.lang.Integer (0));
    _methods.put ("leaveMatch", new java.lang.Integer (1));
    _methods.put ("currentPlayer", new java.lang.Integer (2));
    _methods.put ("startNewTurn", new java.lang.Integer (3));
    _methods.put ("finishTurnOf", new java.lang.Integer (4));
    _methods.put ("isAValidTurnShot", new java.lang.Integer (5));
    _methods.put ("playerData", new java.lang.Integer (6));
    _methods.put ("playersInfo", new java.lang.Integer (7));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // GameServer/GameManager/enterOnMatch
       {
         try {
           GameServer.ServerListener listener = GameServer.ServerListenerHelper.read (in);
           GameServer.Player $result = null;
           $result = this.enterOnMatch (listener);
           out = $rh.createReply();
           GameServer.PlayerHelper.write (out, $result);
         } catch (GameServer.CrowdedRoom $ex) {
           out = $rh.createExceptionReply ();
           GameServer.CrowdedRoomHelper.write (out, $ex);
         }
         break;
       }

       case 1:  // GameServer/GameManager/leaveMatch
       {
         String playerName = in.read_string ();
         this.leaveMatch (playerName);
         out = $rh.createReply();
         break;
       }

       case 2:  // GameServer/GameManager/currentPlayer
       {
         GameServer.Player $result = null;
         $result = this.currentPlayer ();
         out = $rh.createReply();
         GameServer.PlayerHelper.write (out, $result);
         break;
       }

       case 3:  // GameServer/GameManager/startNewTurn
       {
         this.startNewTurn ();
         out = $rh.createReply();
         break;
       }

       case 4:  // GameServer/GameManager/finishTurnOf
       {
         String playerName = in.read_string ();
         int rightHandPicks = in.read_long ();
         int turnShot = in.read_long ();
         this.finishTurnOf (playerName, rightHandPicks, turnShot);
         out = $rh.createReply();
         break;
       }

       case 5:  // GameServer/GameManager/isAValidTurnShot
       {
         String playerName = in.read_string ();
         int shot = in.read_long ();
         boolean $result = false;
         $result = this.isAValidTurnShot (playerName, shot);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 6:  // GameServer/GameManager/playerData
       {
         String playerName = in.read_string ();
         GameServer.Player $result = null;
         $result = this.playerData (playerName);
         out = $rh.createReply();
         GameServer.PlayerHelper.write (out, $result);
         break;
       }

       case 7:  // GameServer/GameManager/playersInfo
       {
         GameServer.Player $result[] = null;
         $result = this.playersInfo ();
         out = $rh.createReply();
         GameServer.PlayersHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:GameServer/GameManager:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public GameManager _this() 
  {
    return GameManagerHelper.narrow(
    super._this_object());
  }

  public GameManager _this(org.omg.CORBA.ORB orb) 
  {
    return GameManagerHelper.narrow(
    super._this_object(orb));
  }


} // class GameManagerPOA
